version: '3.8'

x-common-variables: &common-vars
  AIRFLOW__CORE__EXECUTOR: LocalExecutor
  AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
  AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
  AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
  AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
  AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
  AIRFLOW__CORE__PLUGINS_FOLDER: /opt/airflow/plugins
  AIRFLOW__CORE__BASE_LOG_FOLDER: /opt/airflow/logs
  # Evitar que Airflow intente crear/editar el archivo de configuraci√≥n
  AIRFLOW__CORE__CONFIG_OPTIONS_PATH: /dev/null
  AIRFLOW_HOME: /opt/airflow

services:
  postgres:
    image: postgres:13
    container_name: de-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - de-network

  airflow-init:
    build: 
      context: ./airflow
      dockerfile: Dockerfile
    container_name: de-airflow-init
    environment:
      <<: *common-vars
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./logs/airflow:/opt/airflow/logs
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "
        echo 'Initializing Airflow Database...' &&
        airflow db init &&
        echo 'Creating Admin User...' &&
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com &&
        echo 'Airflow initialization completed successfully!'
      "
    networks:
      - de-network

  airflow-webserver:
    build: 
      context: ./airflow
      dockerfile: Dockerfile
    container_name: de-airflow-webserver
    restart: unless-stopped
    environment:
      <<: *common-vars
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'false'
      AIRFLOW__WEBSERVER__RBAC: 'true'
      AIRFLOW__WEBSERVER__WORKERS: 2
      AIRFLOW__WEBSERVER__SECRET_KEY: ${WEBSERVER_SECRET_KEY}
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./logs/airflow:/opt/airflow/logs
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    command: >
      bash -c "
        echo 'Starting Airflow Webserver...' &&
        airflow webserver --port 8080
      "
    healthcheck:
      test: 
        [
          "CMD-SHELL",
          "curl -f http://localhost:8080/health || exit 1"
        ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s
    networks:
      - de-network

  airflow-scheduler:
    build: ./airflow
    container_name: de-airflow-scheduler
    restart: unless-stopped
    environment:
      <<: *common-vars
      AIRFLOW__SCHEDULER__CATCHUP_BY_DEFAULT: 'false'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./logs/airflow:/opt/airflow/logs
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", 'timeout 10 bash -c "airflow jobs check --job-type SchedulerJob --hostname $$HOSTNAME" || exit 1']
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    networks:
      - de-network

volumes:
  postgres_data:

networks:
  de-network:
    driver: bridge